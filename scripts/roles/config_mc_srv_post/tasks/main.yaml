---
- name: Check if DSE metrics collector target directory alreayd exists
  stat:
    path: "/opt/{{ dse_mc_master_branch_name }}"
  register: mc_targetdir

#- debug: msg="{{ mc_targetdir }}"
  
- name: Extract DSE metrics collector zip file to "/opt" diretory
  shell: "unzip {{ dse_mc_code_download_homedir }}/{{ dse_mc_master_branch_zipfile_name }} -d /opt"
  when: mc_targetdir.stat.exists == false

- name: Recursively change ownership of Metrics Collector directory to {{ remote_operator_user }}
  file:
    path: "/opt/{{ dse_mc_master_branch_name }}"
    state: directory
    recurse: yes
    owner: "{{ remote_operator_user }}"
    group: "{{ remote_operator_user }}"

# Reference dummy variables whose valeus are updated in a different group/host
# -- can't reference {{dse_cluster_name}} or {{dse_nodes_ips_with_mc_port}} directly.
#    otherwise, "DUMMY" value is returned
#- debug: msg={{ hostvars[groups['dse_server'][0]]['dse_cluster_name'] }}
#- debug: msg={{ hostvars[groups['dse_server'][0]]['dse_nodes_ips_with_mc_port'] }}

- name: Configure Prometheus {{ prom_tg_dse_json_file }} file 
  shell: |
    cat "/opt/{{ dse_mc_master_branch_name }}/prometheus/{{ prom_tg_dse_json_file }}" | \
      jq '{{ cluster_key }} = "{{ hostvars[groups['dse_server'][0]]['dse_cluster_name'] }}"' | \
      jq '{{ targets_key }} = []' | \
      jq '{{ targets_key }} += [{{ hostvars[groups['dse_server'][0]]['dse_nodes_ips_with_mc_port'] }}]' > \ 
         "/opt/{{ dse_mc_master_branch_name }}/prometheus/{{ prom_tg_dse_json_file }}.tmp"
  
    mv "/opt/{{ dse_mc_master_branch_name }}/prometheus/{{ prom_tg_dse_json_file }}.tmp" \
       "/opt/{{ dse_mc_master_branch_name }}/prometheus/{{ prom_tg_dse_json_file }}"
  
    chown "{{ remote_operator_user }}:{{ remote_operator_user }}" \
       "/opt/{{ dse_mc_master_branch_name }}/prometheus/{{ prom_tg_dse_json_file }}"

- name: Start docker container of Prometheus and Grafana servers 
  docker_compose:
    project_src: /opt/{{ dse_mc_master_branch_name }}
    state: present
  register: dc_output

#- debug: 
#    var: dc_output